From 79ad60793e9f0c2c1999f2b3a69d55cad70d9715 Mon Sep 17 00:00:00 2001
From: Daiane Angolini <daiane.angolini@freescale.com>
Date: Tue, 2 Jun 2015 15:09:08 -0300
Subject: [PATCH] valgrind: Backport bugfix

Add this
http://git.yoctoproject.org/cgit/cgit.cgi/poky/commit/meta/recipes-devtools/valgrind?id=d1ce219960c031c00b48bf454b740b8bffcfbc43

Signed-off-by: Daiane Angolini <daiane.angolini@freescale.com>
---
 none/tests/arm/Makefile.am | 43 ++++++++++++++++++++++++++++++++++++++-----
 1 file changed, 38 insertions(+), 5 deletions(-)

diff --git a/none/tests/arm/Makefile.am b/none/tests/arm/Makefile.am
index a83a267..375c73b 100644
--- a/none/tests/arm/Makefile.am
+++ b/none/tests/arm/Makefile.am
@@ -17,18 +17,20 @@ EXTRA_DIST = \
 	vfp.stdout.exp vfp.stderr.exp vfp.vgtest \
 	vfpv4_fma.stdout.exp vfpv4_fma.stderr.exp vfpv4_fma.vgtest
 
-# For yocto:
-#  Only include tests that don't require Thumb.
-#  Only use CFLAGS passed in by the build system.
-# Some tests may fail, but all tests must compile.
+# Remove the following tests which cause compiler errors for all tunings
+#  available for beagle bone (see remove-arm-variant-specific.patch):
+#	intdiv
+#	vcvt_fixed_float_VFP
+
 check_PROGRAMS = \
 	allexec \
+	ldrt \
 	ldrt_arm \
 	neon128 \
 	neon64 \
 	v6intARM \
+	v6intThumb \
 	v6media \
-	vcvt_fixed_float_VFP \
 	vfp \
 	vfpv4_fma
 
@@ -37,3 +39,34 @@ AM_CXXFLAGS  += @FLAG_M32@
 AM_CCASFLAGS += @FLAG_M32@
 
 allexec_CFLAGS		= $(AM_CFLAGS) @FLAG_W_NO_NONNULL@
+
+# These two are specific to their ARM/Thumb respectively and so we
+# hardwire -marm/-mthumb.  neon64 and neon128 are compilable on both,
+# however, ask for them to be compiled on thumb, as that looks
+# like that's going to be the more common use case.  They also
+# need special helping w.r.t -mfpu and -mfloat-abi, though.
+# Also force -O0 since -O takes hundreds of MB of memory 
+# for v6intThumb.c.
+v6intARM_CFLAGS   = $(AM_CFLAGS) -g -O0 -mcpu=cortex-a8 -marm
+v6intThumb_CFLAGS = $(AM_CFLAGS) -g -O0 -mcpu=cortex-a8 -mthumb
+
+v6media_CFLAGS    = $(AM_CFLAGS) -g -O0 -mcpu=cortex-a8 -mthumb
+
+vfp_CFLAGS        = $(AM_CFLAGS) -g -O0 -mcpu=cortex-a8 \
+			-mfpu=neon \
+			-mthumb
+
+
+neon128_CFLAGS    = $(AM_CFLAGS) -g -O0 -mcpu=cortex-a8 \
+			-mfpu=neon \
+			-mthumb
+
+neon64_CFLAGS     = $(AM_CFLAGS) -g -O0 -mcpu=cortex-a8 \
+			-mfpu=neon \
+			-mthumb
+
+intdiv_CFLAGS	  = $(AM_CFLAGS) -g -mcpu=cortex-a15 -mthumb
+ldrt_CFLAGS	  = $(AM_CFLAGS) -g -mcpu=cortex-a8 -mthumb
+ldrt_arm_CFLAGS	  = $(AM_CFLAGS) -g -mcpu=cortex-a8 -marm
+
+vfpv4_fma_CFLAGS  = $(AM_CFLAGS) -g -O0 -mcpu=cortex-a15 -mfpu=vfpv4 -marm
-- 
1.9.1

